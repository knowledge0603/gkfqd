using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using SuperMap.Data;

namespace gkfqd.ui.gk01
{
    public partial class gk013 : Form
    {

        private Datasource gk013Datasource;
        public gk013(Datasource datasource)
        {
            InitializeComponent();
            gk013Datasource = datasource;
        }

        private void button1_Click(object sender, EventArgs e)
        {
            //获得用于操作的两个数据集
            DatasetVector gkfqdDatasetVector = (DatasetVector)gk013Datasource.Datasets["gkfqd"];
            DatasetVector tempDatasetVector = (DatasetVector)gk013Datasource.Datasets["temp_gkfqd"];
           // tempDatasetVector.IsReadOnly = false;
           // gkfqdDatasetVector.IsReadOnly = false;


            // 构造一个查询参数对象，查询Countries数据集中 date 字段为"1984-08-10"的记录。
            QueryParameter para = new QueryParameter();
            para.AttributeFilter = "SMID =  2";
            para.CursorType = CursorType.Dynamic;

            Recordset tempRecordset = tempDatasetVector.Query(para);
            Recordset gkfqdRecordset = gkfqdDatasetVector.GetRecordset(false, CursorType.Dynamic);

            FieldInfo fieldInfo = new FieldInfo();
            fieldInfo.Name = "NAME";
            fieldInfo.Caption = "NAME";
            fieldInfo.Type = FieldType.Text;

           

            FieldInfos fieldInfos = tempDatasetVector.FieldInfos;
            fieldInfos.Add(fieldInfo);
          

            Dictionary<String, Object> values = new Dictionary<String, Object>();

            values.Add("XZQMC", "supermap123");

            Recordset.BatchEditor editor = tempRecordset.Batch;

            // 设置批量更新每次提交的记录数目
            editor.MaxRecordCount =1;

            // 批量更新操作开始
            editor.Begin();
            while (!tempRecordset.IsEOF)
            {
                tempRecordset.SetValues(values);
                tempRecordset.MoveNext();
            }


            // 批量操作统一提交
            editor.Update();
            //fieldInfo.Dispose();


            // 源字段数组，数组中的字段必须在源记录集中存在
            String[] srcFieldsNames = new String[] { "NAME" };
            // 目标字段数组，数组中的字段必须在目标数据集中存在
            String[] tagFieldsNames = new String[] { "test"};
            Boolean flag = false;
            // 向目标数据集中追加行  
            if (gkfqdDatasetVector.GetRecordset().Bounds.Equals.Append(tempRecordset))
            {
                Console.WriteLine("追加成功！");
                gkfqdRecordset.SetFieldValue("NAME_1", "test");
                gkfqdRecordset.Update();
            }
            for (int i = 0; i < gkfqdRecordset.RecordCount; i++)
            {
                gkfqdRecordset.MoveTo(i);
                if (gkfqdRecordset.Bounds.Equals(tempRecordset.Bounds))
                {
                    flag = true;
                }
               
            }
            //tempRecordset.

            //FieldInfo meField = SetFieldInfo("GeometryArea", "面积", FieldType.Double);

           // FieldInfos.Add(meField);

            //if (gkfqdDatasetVector.Append(tempRecordset))
            //{
            //    Console.WriteLine("追加数据集成功");
            //    //MessageBox.Show(recordset.GetID().ToString());
            //    //gkfqdRecordset.SetFieldValue("NAME", "test");
            //    //gkfqdRecordset.Update();
            //}

            //gkfqdRecordset.AddNew(tempRecordset.GetGeometry());
            //gkfqdRecordset.SetFieldValue("NAME", "test");
            //gkfqdRecordset.Update();

            tempRecordset.Dispose();
            gkfqdRecordset.Dispose();
        }
    }
}
